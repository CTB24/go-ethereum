name: Release Builds (push)

on:
  push:
    branches: [ master ]

jobs:
  linux-intel:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24
        cache: false

    - name: Run build (amd64)
      env:
        LINUX_SIGNING_KEY: "{{ secrets.LINUX_SIGNING_KEY }}"
      run: |
        go run build/ci.go install -arch amd64 -dlgo
        go run build/ci.go archive -arch amd64 -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds

    - name: Run build (386)
      env:
        LINUX_SIGNING_KEY: "{{ secrets.LINUX_SIGNING_KEY }}"
      run: |
        apt-get -yq --no-install-suggests --no-install-recommends install gcc-multilib
        go run build/ci.go install -arch 386 -dlgo
        go run build/ci.go archive -arch 386 -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds

  linux-arm:
    name: Linux Build (arm)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24
        cache: false

    - name: Set up cross toolchain
      run: |
        apt-get -yq --no-install-suggests --no-install-recommends --force-yes install gcc-arm-linux-gnueabi libc6-dev-armel-cross gcc-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-aarch64-linux-gnu libc6-dev-arm64-cross
        ln -s /usr/include/asm-generic /usr/include/asm

    - name: Run build (arm64)
      env:
        LINUX_SIGNING_KEY: "{{ secrets.LINUX_SIGNING_KEY }}"
      run: |
        go run build/ci.go install -dlgo -arch arm64 -cc arm-linux-gnueabi-gcc
        go run build/ci.go archive -arch arm64 -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds

    - name: Run build (armv5)
      env:
        GOARM: "5"
        LINUX_SIGNING_KEY: "{{ secrets.LINUX_SIGNING_KEY }}"
      run: |
        go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc
        go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds

    - name: Run build (armv6)
      env:
        GOARM: "6"
        LINUX_SIGNING_KEY: "{{ secrets.LINUX_SIGNING_KEY }}"
      run: |
        go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc
        go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds

    - name: Run build (armv7)
      env:
        GOARM: "7"
        LINUX_SIGNING_KEY: "{{ secrets.LINUX_SIGNING_KEY }}"
      run: |
        go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc
        go run build/ci.go archive -arch arm -type tar -signer LINUX_SIGNING_KEY -signify SIGNIFY_KEY -upload gethstore/builds

  docker:
    name: Docker Image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24
        cache: false

    - name: Run docker build
      env:
        DOCKER_HUB_USERNAME: "{{ secrets.DOCKER_HUB_USERNAME }}"
        DOCKER_HUB_PASSWORD: "{{ secrets.DOCKER_HUB_PASSWORD }}"
      run: |
        go run build/ci.go dockerx -platform linux/amd64,linux/arm64,linux/riscv64 -upload
